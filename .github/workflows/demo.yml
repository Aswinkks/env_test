name: dbk cicd pipeline

on:
  workflow_dispatch:
  
env:
  env_name: Production

jobs:
  DBK-PIPELINE-JOB:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      env_name: ${{ steps.step1.outputs.env_name }}
    steps:
      - id: step1
        run: |
           echo "Running on branch ${{ github.ref }}"
           if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "::set-output name=env_name::Production"
           elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "::set-output name=env_name::Development"
           fi

  DEMO-JOB:
    runs-on: ubuntu-latest
    needs: DBK-PIPELINE-JOB
    steps:
      - name: Set environment variable
        run: echo "ENV_NAME=${{ needs.DBK-PIPELINE-JOB.outputs.env_name }}" >> $GITHUB_ENV
      - name: Print environment variable
        run: echo $ENV_NAME

  login:
    runs-on: ubuntu-latest
    needs: DEMO-JOB
    environment:
      name: ${{ github.env.env_name }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          

