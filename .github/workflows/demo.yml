
name: dbk cicd pipeline

on:
  workflow_dispatch:
  
jobs:
  DBK-PIPELINE-JOB:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.step1.outputs.env_name }}
    steps:
      - id: step1
        run: |
           echo "Running on branch ${{ github.ref }}"
           if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "env_name=Production" >> "$GITHUB_OUTPUT"
           elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "env_name=develop" >> "$GITHUB_OUTPUT"
           else
            echo "no variables"
           fi
             echo "env_name=Production" >> "$GITHUB_OUTPUT"
  login:
    runs-on: ubuntu-latest
    needs: DBK-PIPELINE-JOB
    environment: ${{ needs.DBK-PIPELINE-JOB.outputs.env_name }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}

# name: dbk cicd pipeline

# on:
#   workflow_dispatch:
# #       - 'ncr_cicd/**'


# jobs:
#   DBK_CICD:
#     runs-on: ubuntu-latest
#     # Map a step output to a job output
#     outputs:
#       env_name: ${{ steps.branch_check.outputs.env_name }}
#     steps:
#       - name: Some check on branch
#         id: branch_check
#         run: |
#            echo "Running on branch ${{ github.ref }}"
#            if [ "${{ github.ref }}" = "refs/heads/main" ]; then
#             echo "::set-output name=env_name::main"
#            elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
#             echo "::set-output name=env_name::Production"
#            else
#             echo "abcd"
#            fi

#   login:
#     runs-on: ubuntu-latest
#     needs: DBK_CICD
#     environment:
#       name: ${{needs.DBK_CICD.outputs.env_name}}
#     steps:
#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.USERNAME }}
#           password: ${{ secrets.PASSWORD }}
          

